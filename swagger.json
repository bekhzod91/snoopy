{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Snoopy API",
    "description": "This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "contact": {
      "email": "bekhzod.tillakhanov@gmail.com"
    }
  },
  "paths": {
    "/api/v1/sign-in/": {
      "post": {
        "summary": "Create new token for authorization.",
        "tags": [
          "Authentication"
        ],
        "operationId": "createToken",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequestDTO"
              }
            }
          }
        }
      }
    },
    "/api/v1/sign-out/": {
      "post": {
        "summary": "Destroy authorization token.",
        "tags": [
          "Authentication"
        ],
        "operationId": "destoryToken",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignOutResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignOutRequestDTO"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SignInResponseDTO": {
        "title": "SignInResponseDTO",
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authorization token."
          }
        },
        "required": [
          "token"
        ]
      },
      "ErrorDTO": {
        "title": "ErrorDTO",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The person's username."
          },
          "message": {
            "type": "string",
            "description": "The person's password."
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SignInRequestDTO": {
        "title": "SignInRequestDTO",
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin",
            "description": "The person's username."
          },
          "password": {
            "type": "string",
            "example": "Test1234",
            "description": "The person's password."
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "SignOutResponseDTO": {
        "title": "SignOutResponseDTO",
        "type": "object",
        "properties": null
      },
      "SignOutRequestDTO": {
        "title": "SignOutRequestDTO",
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authrization token."
          }
        },
        "required": [
          "token"
        ]
      }
    }
  },
  "security": [
    {
      "Token": []
    }
  ]
}